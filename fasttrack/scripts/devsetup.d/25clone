#!/bin/bash
#
# 20clone - Clone the git repos
#
# Author: Lord Kator <lordkator@swgemu.com>
#
# Created: Sun Dec 27 15:04:30 EST 2015
#

clone_repos() {
    # is it cloned already?
    local missing=''

    for i in $REPOS
    do
	if [ -f $i/.git/HEAD ]; then
	    echo "Repo $i is already cloned in $WORKSPACE/$i"
	else
	    missing="$missing   $i"
	fi
    done

    if [ -z "$missing" ]; then
	return
    fi

    if zenity --question  --text="You're missing the following repos:\n\n$missing\n\nWould you like to clone them now?"; then
	:
    else
	alert "Git Repositories Missing" "Need to clone: $missing\nYou will not be able to build the server until you complete this step."
	exit 203
    fi

    msg "Clone missing repos: $missing"

    local status_pipe=$(mktemp /tmp/clone-status-pipe-XXXXXX)
    local status_file=$(mktemp /tmp/clone-status-file-XXXXXX)

    echo 255 > $status_file
    mknod $status_pipe p
    command_window "Clone Status" "tail -f $status_pipe"  &
    sleep 3

    (
    echo 254 > $status_file
    echo -e 'H4sIACYziVYAA5WSYQpAIQiD/3eKwe5/x8h8ZaweKlE2PmyMyFEA6Y0Xff90P9vSA2UdRf+BrU/D\nc2VhU9PwMH7CyUAMFvp+f8UXpqrFKhxfBraT12QCBRuswPJvNJAZXwcxETL5fgIAAA=='|base64 -d|gunzip
    trap 'echo $? > '${status_file}';echo -e "H4sIAC81iVYAA1NWBgMFIAATQArMg3IUlKHyEIoLJgxSAFOvgKwchUZSjzATv3plZOuVMdWjynOh\nO5NY9+A0n6B6qP0owQIPHi4ArjNqZE8BAAA="|base64 -d|gunzip' 0
    set -xe
    for i in $missing
    do
	git clone --progress ssh://${GERRIT_HOST}/${i}.git
	scp ${GERRIT_HOST}:hooks/commit-msg ${i}/.git/hooks
    done
    set +x
    for i in $missing
    do
	if [ "X$i" = "XCore3" ]; then
	    (set -x;cd $i;git checkout -b unstable origin/unstable; sed -e '/push = /d' -e '/url/s!$!\n\tpush = HEAD:refs/for/unstable!' -i .git/config)
	fi
    done
    set +xe
    echo -e '\n\n\n'
    echo -e 'H4sIAJ00iVYAA1NQBgEFBSBSAJNQPoxWVkZmwMS5YMrx0wro4lzYxRVw01wKaA7EUAF1F5oDFVCU\n47YI3TpyPYYebkSGIxcAebZM9YABAAA='|base64 -d|gunzip
    trap - 0
    echo 0 > $status_file
    ) 2>&1 | tee $status_pipe
    local ret=$(cat $status_file 2> /dev/null)

    if [ -x "$ret" ]; then
	ret=256
    fi

    if [ $ret -gt 0 ]; then
	error "Clone failed with error code $ret\n\nReview the log output for clues." 125
    else
	zenity --info --text="Clone process success.\n\nPress [OK] to discard the log window"
    fi
    fuser -k $status_pipe
    rm -f $status_pipe $status_file
}

check_repos() {
    local tm_start=$SECONDS

    msg "Check Repos"

    if full_run_not_complete; then
	notice "Pull Latest" "Please wait while we pull latest changes from repos.\n"
    else
	return 0
    fi

    for i in $REPOS
    do
	echo "** Check $i repo"

	gerrit_url="ssh://${GERRIT_HOST}/${i}.git"

	read name url junk <<< $(cd $i;git remote -v)

	if [ "$url" != "$gerrit_url" ]; then
	    echo "Switching $i repo from ${url} to ${gerrit_url}"
	    (set -x;cd $i;git remote set-url origin "${gerrit_url}";git remote -v;git stash --include-untracked;git pull)
	    scp ${GERRIT_HOST}:hooks/commit-msg ${i}/.git/hooks && echo "Added commit-msg hook to $i"
	else
	    if [ ! -f ~/.devsetup.ran ]; then
		(set -x;cd $i;git stash --include-untracked;git pull)
		alert "Pulled Latest" "Pulled latest changes for $i repo."
	    fi
	fi
    done

    if full_run_not_complete; then
	(set -x;cd Core3;git checkout -b unstable origin/unstable;sed -e '/push = /d' -e '/url/s!$!\n\tpush = HEAD:refs/for/unstable!' -i .git/config)
	notice "Repos Updates" "All repos are up to date."
	local delta=999
	let "delta=$SECONDS - $tm_start"
	step_complete 0 "delta=$delta"
    fi
}

make_links() {
    msg "Make links"
    ( set -x
	rm -f MMOCoreORB MMOEngine Core3/MMOEngine
	[ -d Core3 ] && (cd $PWD/Core3;ln -s ../PublicEngine/MMOEngine .)
	[ -d PublicEngine ] && ln -s PublicEngine/MMOEngine .
	[ -d Core3 ] && ln -s Core3/MMOCoreORB .
	if [ -f PublicEngine/MMOEngine/bin/idlc -a ! -x /usr/local/bin/idlc ]; then
	    (echo export CLASSPATH=$PWD/PublicEngine/MMOEngine/bin/idlc.jar;cat PublicEngine/MMOEngine/bin/idlc) | sudo tee /usr/local/bin/idlc
	    sudo chmod 755 /usr/local/bin/idlc
	fi
    )

    local englib=PublicEngine/MMOEngine/lib/unix/libengine3.a

    if [ ! -L $englib ]; then
	echo "Setup unix library link"
	mkdir -p PublicEngine/MMOEngine/lib/unix > /dev/null 2>&1
	(
	    cd PublicEngine/MMOEngine/lib/unix
	    if [ $(uname -s) = "Darwin" ]; then
		ln -s ../lion64/libengine3.a
	    else
	    case $(uname -m) in
		x86_64 ) ln -s ../linux64/libengine3.a ;;
		i386 ) ln -s ../linux32/libengine3.a ;;
	    esac
	    fi
	)
    fi

    echo "Using engine library: $(readlink $englib)"
}

setup_gitattributes() {
    local gafile="${WORKSPACE}/Core3/MMOCoreORB/bin/conf/.gitattributes"

    if [ ! -f "${gafile}" ]; then
	notice "Git Attributes" "config.lua now set to merge=union by default using ${gafile}"
        echo 'config.lua merge=union' > "${gafile}"
    fi
}

pushd $WORKSPACE

    clone_repos

    check_repos

    setup_gitattributes

    make_links

popd
